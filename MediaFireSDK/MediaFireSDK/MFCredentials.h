//
//  MFCredentials.h
//  MediaFireSDK
//
//  Created by Daniel Dean on 4/3/14.
//  Copyright (c) 2014 MediaFire. All rights reserved.
//

#import <Foundation/Foundation.h>
#import "MFCredentialsDelegate.h"

/**
 @brief Basic credentials object.  Conforms to the MFCredentialsDelegate protocol.  Does not use persistent storage.  You should
 subclass it and implement your own storage and encryption mechanisms.
 */
@interface MFCredentials : NSObject <MFCredentialsDelegate>

/**
 -----------
 #Constants#
 -----------
 */

/**
 @brief The name of the "email" property in a MediaFire credential.
 */
extern NSString* const MFCRD_MF_EMAIL;
/**
 @brief The name of the "ekey" property in a MediaFire credential.
 */
extern NSString* const MFCRD_MF_EKEY;
/**
 @brief The name of the "password" property in a MediaFire credential.
 */
extern NSString* const MFCRD_MF_PASS;
/**
 @brief The name of the "token" property in a Facebook credential.
 */
extern NSString* const MFCRD_FB_TOKEN;
/**
 @brief The name of the "secret" property in a Twitter credential.
 */
extern NSString* const MFCRD_TW_SECRET;
/**
 @brief The name of the "token" property in a Twitter credential.
 */
extern NSString* const MFCRD_TW_TOKEN;
/**
 @brief Indicates a "Facebook" credential type.
 */
extern NSString* const MFCRD_TYPE_FB;
/**
 @brief Indicates a "MediaFire" credential type.
 */
extern NSString* const MFCRD_TYPE_MF;
/**
 @brief Indicates a "Twitter" credential type.
 */
extern NSString* const MFCRD_TYPE_TW;
/**
 @brief Indicates a "MediaFire ekey" credential type.
 */
extern NSString* const MFCRD_TYPE_EKEY;

/**
 -----------
 #Functions#
 -----------
 **/

/**
 @brief Empties all credentials and peripheral properties related to credentials.
 */
- (BOOL)purgeCredentials;

/**
 @brief Gets whatever credentials are stored, does not care which type.  All credentials dictionaries will contain a @"type" value, and one or more type-specific values.  In the case of MFCRD_TYPE_MF, the credential vaules are email and password.  Type MFCRD_TYPE_FB will include only a token value. Type MFCRD_TYPE_EKEY will include an ekey and password.  And type MFCRD_TYPE_TW will include a token and a secret.
 */
- (NSDictionary*)getCredentials;

/**
 @brief Checks if stored credentials have been validated.
 */
- (BOOL)isValidCredentials;

/**
 @brief Marks stored credentials as validated.
 */
- (BOOL)validate;

/**
 -------------------------
 #Set Credentials by Type#
 -------------------------
 */

/**
 @brief Sets the credentials to a MediaFire credential set.
 
 @param email The email address associated with the user.
 @param password The password associated with the user's email.
 */
- (BOOL)setMediaFire:(NSString*)email withPassword:(NSString*)password;

/**
 @brief Converts an email credential set into an ekey credential set.
 
 @param ekey The ekey returned by a call to /api/user/get_session_token.php.
 */
- (BOOL)convertToEKey:(NSString*)ekey;

/**
 @brief Sets the credentials to a Facebook credential set.
 
 @param token The login token generated by Facebook when connecting via the
 Facebook SDK.
 */
- (BOOL)setFacebook:(NSString*)token;

/**
 @brief Sets the credentials to a Twitter credential set.
 
 @param token The login token generated by Twitter when connecting via one of
 Twitter's OAuth interfaces.
 
 @param secret The secret generated by Twitter when connecting via one of 
 Twitter's OAuth interfaces.
 */
- (BOOL)setTwitter:(NSString*)token withSecret:(NSString*)secret;


@end
